server:
  port: 9527
spring:
  application:
    name: cloud-gateway #以微服务注册进consul或nacos服务列表内
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: ${spring.application.name}
    gateway:
      routes:
        - id: pay_routh1 #pay_routh1                  #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                  #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service
          predicates:
            - Path=/pay/gateway/get/**                # 断言，路径相匹配的进行路由
            - After=2025-03-09T16:32:38.592147900+08:00[Asia/Shanghai]  #在这个时间点之后才能访问资源  不然报404
#            - Before=2025-03-09T16:33:38.592147900+08:00[Asia/Shanghai]  #在这个时间点之前才能访问资源 不然报404
#            - Cookie=name, wj  #Cookie里面必须要有name属性，且属性值必须得是wj
#            - Header=X-Request-Id, \d+ #请求头里面必须要有X-Request-Id属性，并且值必须为整数（\d+是整数的正则表达式）
#            - Host=**.wj.com #请求头里面必须要有Host属性，且属性必须是xxx.wj.com才行
#            - Query=name #表示查询参数里面必须要有一个name属性，值任意
#            - Query=name, \d+ # 表示查询参数里面必须要有一个name属性，并且值必须为整数（\d+是整数的正则表达式）
#            - RemoteAddr=127.0.0.1/24 #外部网络访问当前服务的ip限制在这段域名之内。。
#            - Method=POST
#            - My=Diamond #暂时出错，配置成展开的
#            - name: My
#              args:
#                userType: Diamond
        - id: pay_routh2 #pay_routh2                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
#          uri: http://localhost:8001                #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service                #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/info/**              # 断言，路径相匹配的进行路由
#            - Between=2025-03-09T16:35:38.592147900+08:00[Asia/Shanghai],2025-03-09T16:36:38.592147900+08:00[Asia/Shanghai]

        - id: pay_routh3 #pay_routh3                #路由的ID(类似mysql主键ID)，没有固定规则但要求唯一，建议配合服务名
          #          uri: http://localhost:8001                #匹配后提供服务的路由地址
          uri: lb://cloud-payment-service                #匹配后提供服务的路由地址
          predicates:
            - Path=/pay/gateway/filter/**              # 断言，路径相匹配的进行路由 默认正确地址
#            - Path=/gateway/filter/**    #断言，为配合prefixPath测试过滤，暂时注释掉/pay
#            - Path=/XYZ/abc/{segment}  #断言，为配合setPath测试，{segment}的内容最后会被setPath取代
          filters:
            - My=wj
#            - RedirectTo=302, http://www.atguigu.com/ # 访问http://localhost:9527/pay/gateway/filter跳转到http://www.atguigu.com/
#            - SetPath=/pay/gateway/{segment} # {segment}表示占位符，segment单词不固定，只要和Path里面一直，写啥都行。eg:abs。。。
#            - PrefixPath=/pay #http://localhost:9527/pay/gateway/filter 路径被拆分为了PrefixPath+Path
#            - AddRequestHeader=X-Request-wj1,wj1 #请求头kv，若一头含有多惨则重写一行设置 添加请求头
#            - AddRequestHeader=X-Request-wj2,wj2
#            - RemoveRequestHeader=sec-fetch-site #删除该请求头
#            - SetRequestHeader=sec-fetch-mode, BluewjJJJ #修改请求头sec-fetch-mode的值，改为BluewjJJJ
#            - AddRequestParameter=customerId,9527001 #新增一个请求参数Parameter：k,v （前端不传，配置添加的）
#            - RemoveRequestParameter=customerName #删除请求中带的参数，就算传了也是null
#            - AddResponseHeader=X-Response-atguigu, BlueResponse # 新增请求参数X-Response-atguigu并设值为BlueResponse
#            - SetResponseHeader=Date,2099-11-11 # 设置回应头Date值为2099-11-11
#            - RemoveResponseHeader=Content-Type # 将默认自带Content-Type回应属性删除



# ========================zipkin===================
management:
  zipkin:
    tracing:
      endpoint: http://localhost:9411/api/v2/spans
  tracing:
    sampling:
      probability: 1.0 #采样率默认为0.1(0.1就是10次只能有一次被记录下来)，值越大收集越及时。
